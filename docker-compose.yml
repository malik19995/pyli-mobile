version: '3.7'
services:
  nginx:
    image: nginx:1.17
    volumes:
      - ./pyli_api/heroku.conf:/etc/nginx/conf.d/default.conf
    command: /bin/sh -c "envsubst '\$PORT' < /etc/nginx/conf.d/default.conf > /etc/nginx/conf.d/default.conf" && nginx -g 'daemon off;'
    ports:
      - '80:80'
    depends_on:
      - backend

  redis:
    image: redis
    ports:
      - 6379:6379

  postgres:
    image: postgres:12
    restart: always
    environment:
      POSTGRES_DB: pyli_user
      POSTGRES_USER: pyli_user
      POSTGRES_PASSWORD: password
    ports:
      - '5432:5432'
    volumes:
      - db-data:/var/lib/postgresql/data:cached

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - 5051:80
    depends_on:
      - postgres

  worker:
    container_name: worker
    build:
      context: pyli_api
      dockerfile: Dockerfile
    image: backend
    command: celery -A app.core.celery_app.celery_app worker --loglevel=INFO
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6379/0}
    depends_on:
      - backend
      - redis

  flower:
    container_name: flower
    build:
      context: pyli_api
      dockerfile: Dockerfile
    image: backend
    command: celery -A app.core.celery_app.celery_app flower --port=5555
    ports:
      - 5555:5555
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6379/0}
    depends_on:
      - backend
      - redis
      - worker

  backend:
    build:
      context: pyli_api
      dockerfile: Dockerfile
    command: python app/main.py
    tty: true
    volumes:
      - ./pyli_api:/app/:cached
      - ./.docker/.ipython:/root/.ipython:cached
    environment:
      PYTHONPATH: .
      DATABASE_URL: 'postgresql://pyli_user:password@postgres:5432/pyli_user'
      SECRET_KEY: 'kwgsoftworks'
      ALGORITHM: 'HS256'
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      API_V1_STR: '/api/v1'
      LOCAL_PORT: 80
      LOCAL_HOST: '0.0.0.0'
    depends_on:
      - postgres

volumes:
  db-data:
